---
import { Header } from "components/common/Header";
import type { ArticleItem, CategoryItem, TagItem, YearMonthItem } from "/types";
import Pagination from "./Pagination/index.astro";
import PostsList from "./PostsList/index.astro";
import { Footer } from "components/common/Footer";
import SideBar from "/components/common/SideBar/index.astro";
import { COLOR } from "/constants";

type Props = {
  pageNumber: number;
  blogs: ArticleItem[];
  categories: CategoryItem[];
  tags: TagItem[];
  yearmonths: YearMonthItem[];
  totalCount: number;
  category?: CategoryItem;
  tag?: TagItem;
  yearmonth?: string;
  statusCode?: number;
};

const props = Astro.props;

const dir = (() => {
  if (props.tag) {
    return `tag/${props.tag._id}`;
  } else if (props.category) {
    return `category/${props.category._id}`;
  } else if (props.yearmonth) {
    return `year/${props.yearmonth}`;
  } else {
    return "";
  }
})();
---

<div style={{ backgroundColor: COLOR.bgColor }}>
  <div>
    <Header categories={props.categories} />
  </div>
  <div style={{ padding: "32px 16px" }}>
    <div class="grid grid-cols-1 lg:grid-cols-4">
      <div class:list={["lg:col-span-3"]}>
          {props.tag && (
            <div class='my-12 text-center'>
              {props.blogs.length === 0 ? (
                <p class=''>該当するタグの記事はありません</p>
              ) : (
                <p>{props.tag.tag}に関する記事一覧</p>
              )}
            </div>
          )}
          {props.category && (
            <div class='my-12 text-center'>
              {props.blogs.length === 0 ? (
                <p>該当するカテゴリーの記事はありません</p>
              ) : (
                <p>
                  {props.blogs[0].category.displayedName}カテゴリの記事一覧
                </p>
              )}
            </div>
          )}
          {props.yearmonth && (
            <div class='my-12 text-center'>
              {props.blogs.length === 0 ? (
                <p>該当する期間の記事はありません</p>
              ) : (
                <p>{props.yearmonth}の記事一覧</p>
              )}
            </div>
          )}
          {props.statusCode && (
            <div>Error{props.statusCode}</div>
          )}
          {
            !props.statusCode && (
              <PostsList blogs={props.blogs} />
            )
          }
          {
            !props.statusCode && (
              <div
                style={{ marginTop: "50px", justifyContent: "center" }}
              >
                <Pagination
                  dir={dir}
                  pageNumber={props.pageNumber}
                  totalCount={props.totalCount}
                />
              </div>
            )
          }
      </div>
      <div class="lg:col-span-1 mt-20 lg:mt-0 px-4">
        <SideBar yearmonths={props.yearmonths} tags={props.tags} />
      </div>
    </div>
  </div>
  <div>
    <Footer categories={props.categories} />
  </div>
</div>
